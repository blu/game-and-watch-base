	.syntax unified
	.cpu cortex-m7
	.thumb

	.section .text.mul_sin
	.weak mul_sin
	.type mul_sin, %function

// multiply by sine
// r0.w: multiplicand
// r1: angle ticks -- [0, 2pi) -> [0, 256)
// returns: r0: sine product as fx16.15 (r0[31] replicates sign)
// clobbers: r12

	.balign 32
mul_sin:
	ands	r1,r1,#0xff
	cmp	r1,#0x80
	bcc	.Lsign_done
	negs	r0,r0
	subs	r1,r1,#0x80
.Lsign_done:
	cmp	r1,#0x40
	bcc	.Lfetch
	bne	.Lnot_maximum
	sxth	r0,r0
	lsls	r0,r0,#15
	bx	lr
.Lnot_maximum:
	subs	r1,r1,#0x80
	negs	r1,r1
.Lfetch:
	adr	r12,.LsinLUT15_64
	ldrh	r1,[r12,r1,lsl #1]
	smulbb	r0,r0,r1
	bx	lr
	.balign 32
.LsinLUT15_64:
	.short 0x0000, 0x0324, 0x0648, 0x096B, 0x0C8C, 0x0FAB, 0x12C8, 0x15E2
	.short 0x18F9, 0x1C0C, 0x1F1A, 0x2224, 0x2528, 0x2827, 0x2B1F, 0x2E11
	.short 0x30FC, 0x33DF, 0x36BA, 0x398D, 0x3C57, 0x3F17, 0x41CE, 0x447B
	.short 0x471D, 0x49B4, 0x4C40, 0x4EC0, 0x5134, 0x539B, 0x55F6, 0x5843
	.short 0x5A82, 0x5CB4, 0x5ED7, 0x60EC, 0x62F2, 0x64E9, 0x66D0, 0x68A7
	.short 0x6A6E, 0x6C24, 0x6DCA, 0x6F5F, 0x70E3, 0x7255, 0x73B6, 0x7505
	.short 0x7642, 0x776C, 0x7885, 0x798A, 0x7A7D, 0x7B5D, 0x7C2A, 0x7CE4
	.short 0x7D8A, 0x7E1E, 0x7E9D, 0x7F0A, 0x7F62, 0x7FA7, 0x7FD9, 0x7FF6

	.size mul_sin, . - mul_sin

	.section .text.mul_cos
	.weak mul_cos
	.type mul_cos, %function

// multiply by cosine
// r0.w: multiplicand
// r1: angle ticks -- [0, 2pi) -> [0, 256)
// returns; r0: cosine product as fx16.15 (r0[31] replicates sign)
// clobbers: r12

mul_cos:
	adds	r1,r1,#0x40
	b	mul_sin

	.size mul_cos, . - mul_cos

	.section .text.sin2
	.weak sin2
	.type sin2, %function

// get sine
// r0: angle ticks -- [0, 2pi) -> [0, 256)
// returns; r0: sine as fx16.15 (r0[31] replicates sign)
// clobbers: r12

sin2:
	subs	r0,r0,#0x40
	b	cos2

	.size sin2, . - sin2

	.section .text.cos2
	.weak cos2
	.type cos2, %function

// get cosine
// r0: angle ticks -- [0, 2pi) -> [0, 256)
// returns: r0: cosine as fx16.15 (r0[31] replicates sign)
// clobbers: r12

	.balign 32
cos2:
	ands	r0,r0,#0xff
	bne	.Lnonzero
	movs	r0,#0x8000
	bx	lr
.Lnonzero:
	cmp	r0,#0x80
	bls	.LLfetch
	rsbs	r0,r0,#0x100
.LLfetch:
	adr	r12,.LcosLUT15_128 - 2
	ldrh	r0,[r12,r0,lsl #1]
	sxth	r0,r0
	bx	lr

	.balign 32
.LcosLUT15_128:
	.short 0x7FF6, 0x7FD9, 0x7FA7, 0x7F62, 0x7F0A, 0x7E9D, 0x7E1E, 0x7D8A
	.short 0x7CE4, 0x7C2A, 0x7B5D, 0x7A7D, 0x798A, 0x7885, 0x776C, 0x7642
	.short 0x7505, 0x73B6, 0x7255, 0x70E3, 0x6F5F, 0x6DCA, 0x6C24, 0x6A6E
	.short 0x68A7, 0x66D0, 0x64E9, 0x62F2, 0x60EC, 0x5ED7, 0x5CB4, 0x5A82
	.short 0x5843, 0x55F6, 0x539B, 0x5134, 0x4EC0, 0x4C40, 0x49B4, 0x471D
	.short 0x447B, 0x41CE, 0x3F17, 0x3C57, 0x398D, 0x36BA, 0x33DF, 0x30FC
	.short 0x2E11, 0x2B1F, 0x2827, 0x2528, 0x2224, 0x1F1A, 0x1C0C, 0x18F9
	.short 0x15E2, 0x12C8, 0x0FAB, 0x0C8C, 0x096B, 0x0648, 0x0324, 0x0000
	.short -0x0324, -0x0648, -0x096B, -0x0C8C, -0x0FAB, -0x12C8, -0x15E2, -0x18F9
	.short -0x1C0C, -0x1F1A, -0x2224, -0x2528, -0x2827, -0x2B1F, -0x2E11, -0x30FC
	.short -0x33DF, -0x36BA, -0x398D, -0x3C57, -0x3F17, -0x41CE, -0x447B, -0x471D
	.short -0x49B4, -0x4C40, -0x4EC0, -0x5134, -0x539B, -0x55F6, -0x5843, -0x5A82
	.short -0x5CB4, -0x5ED7, -0x60EC, -0x62F2, -0x64E9, -0x66D0, -0x68A7, -0x6A6E
	.short -0x6C24, -0x6DCA, -0x6F5F, -0x70E3, -0x7255, -0x73B6, -0x7505, -0x7642
	.short -0x776C, -0x7885, -0x798A, -0x7A7D, -0x7B5D, -0x7C2A, -0x7CE4, -0x7D8A
	.short -0x7E1E, -0x7E9D, -0x7F0A, -0x7F62, -0x7FA7, -0x7FD9, -0x7FF6, 0x8000

	.size cos2, . - cos2

	.section .text.sin
	.weak sin
	.type sin, %function

// get sine
// r0: angle ticks -- [0, 2pi) -> [0, 256)
// r12: lut ptr - 2
// returns; r0: sine as fx16.15 (r0[31] replicates sign)

sin:
	subs	r0,r0,#0x40
	b	cos

	.size sin, . - sin

	.section .text.cos
	.weak cos
	.type cos, %function

// get cosine
// r0: angle ticks -- [0, 2pi) -> [0, 256)
// r12: lut ptr - 2
// returns: r0: cosine as fx16.15 (r0[31] replicates sign)

	.balign 32
cos:
	ands	r0,r0,#0xff
	bne	.LLnonzero
	movs	r0,#0x8000
	bx	lr
.LLnonzero:
	cmp	r0,#0x80
	bls	.LLLfetch
	rsbs	r0,r0,#0x100
.LLLfetch:
	ldrh	r0,[r12,r0,lsl #1]
	sxth	r0,r0
	bx	lr

	.size cos, . - cos

	.section .data.cosLUT15_128
	.weak cosLUT15_128
	.type cosLUT15_128, %object

	.balign 32
cosLUT15_128:
	.short 0x7FF6, 0x7FD9, 0x7FA7, 0x7F62, 0x7F0A, 0x7E9D, 0x7E1E, 0x7D8A
	.short 0x7CE4, 0x7C2A, 0x7B5D, 0x7A7D, 0x798A, 0x7885, 0x776C, 0x7642
	.short 0x7505, 0x73B6, 0x7255, 0x70E3, 0x6F5F, 0x6DCA, 0x6C24, 0x6A6E
	.short 0x68A7, 0x66D0, 0x64E9, 0x62F2, 0x60EC, 0x5ED7, 0x5CB4, 0x5A82
	.short 0x5843, 0x55F6, 0x539B, 0x5134, 0x4EC0, 0x4C40, 0x49B4, 0x471D
	.short 0x447B, 0x41CE, 0x3F17, 0x3C57, 0x398D, 0x36BA, 0x33DF, 0x30FC
	.short 0x2E11, 0x2B1F, 0x2827, 0x2528, 0x2224, 0x1F1A, 0x1C0C, 0x18F9
	.short 0x15E2, 0x12C8, 0x0FAB, 0x0C8C, 0x096B, 0x0648, 0x0324, 0x0000
	.short -0x0324, -0x0648, -0x096B, -0x0C8C, -0x0FAB, -0x12C8, -0x15E2, -0x18F9
	.short -0x1C0C, -0x1F1A, -0x2224, -0x2528, -0x2827, -0x2B1F, -0x2E11, -0x30FC
	.short -0x33DF, -0x36BA, -0x398D, -0x3C57, -0x3F17, -0x41CE, -0x447B, -0x471D
	.short -0x49B4, -0x4C40, -0x4EC0, -0x5134, -0x539B, -0x55F6, -0x5843, -0x5A82
	.short -0x5CB4, -0x5ED7, -0x60EC, -0x62F2, -0x64E9, -0x66D0, -0x68A7, -0x6A6E
	.short -0x6C24, -0x6DCA, -0x6F5F, -0x70E3, -0x7255, -0x73B6, -0x7505, -0x7642
	.short -0x776C, -0x7885, -0x798A, -0x7A7D, -0x7B5D, -0x7C2A, -0x7CE4, -0x7D8A
	.short -0x7E1E, -0x7E9D, -0x7F0A, -0x7F62, -0x7FA7, -0x7FD9, -0x7FF6, 0x8000

	.size cosLUT15_128, . - cosLUT15_128
